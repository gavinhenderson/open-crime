# import Force from "force.graphql"
# import ForceInfo from "force-info.graphql"
# import Person from "person.graphql"
# import Date from "date.graphql"
# import InputLocation from "input-location.graphql"
# import StreetCrime from "street-crime.graphql"
# import StreetLevelOutcome from "street-level-outcome.graphql"
# import CrimeWithOutcome from "crime-with-outcome.graphql"
# import CrimeCategory from "crime-category.graphql"
# import CrimeOutcome from "crime-outcome.graphql"
# import Neighbourhood from "neighbourhood.graphql"
# import NeighbourhoodDetails from "neighbourhood-details.graphql"

type Query {
  hello: String

  forces: [Force]

  force(forceId: String): ForceInfo

  forcePeople(forceId: String): [Person]

  lastUpdated: Date

  streetLevelCrimes(
    location: [InputLocation]
    date: String
    crimeCategory: String
  ): [StreetCrime]

  streetLevelOutcomesByCoords(
    location: [InputLocation]
    date: String
  ): [StreetLevelOutcome]

  streetLevelOutcomesByLocationId(
    locationId: String
    date: String
  ): [StreetLevelOutcome]

  crimesAtLocationByCoords(
    location: [InputLocation]
    date: String
  ): [CrimeWithOutcome]

  crimesAtLocationByLocationId(
    locationId: String
    date: String
  ): [CrimeWithOutcome]

  crimesNoLocation(
    category: String
    force: String
    date: String
  ): [CrimeWithOutcome]

  crimeCategories(date: String): [CrimeCategory]

  outcomeForCrime(persistentId: String): CrimeOutcome

  neighbourhoods(force: String): [Neighbourhood]

  specificNeighbourhood(
    force: String
    neighbourhood: String
  ): NeighbourhoodDetails
}
